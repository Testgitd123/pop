"binary": "U2NydW0gRGVmaW5pdGlvbg0KU2NydW0gaXMgYSBsaWdodHdlaWdodCBmcmFtZXdvcmsgdGhhdCBoZWxwcyBwZW9wbGUsIHRlYW1zIGFuZCBvcmdhbml6YXRpb25zIGdlbmVyYXRlIHZhbHVlIHRocm91Z2ggDQphZGFwdGl2ZSBzb2x1dGlvbnMgZm9yIGNvbXBsZXggcHJvYmxlbXMuIA0KSW4gYSBudXRzaGVsbCwgU2NydW0gcmVxdWlyZXMgYSBTY3J1bSBNYXN0ZXIgdG8gZm9zdGVyIGFuIGVudmlyb25tZW50IHdoZXJlOg0KMS4gQSBQcm9kdWN0IE93bmVyIG9yZGVycyB0aGUgd29yayBmb3IgYSBjb21wbGV4IHByb2JsZW0gaW50byBhIFByb2R1Y3QgQmFja2xvZy4NCjIuIFRoZSBTY3J1bSBUZWFtIHR1cm5zIGEgc2VsZWN0aW9uIG9mIHRoZSB3b3JrIGludG8gYW4gSW5jcmVtZW50IG9mIHZhbHVlIGR1cmluZyBhIFNwcmludC4NCjMuIFRoZSBTY3J1bSBUZWFtIGFuZCBpdHMgc3Rha2Vob2xkZXJzIGluc3BlY3QgdGhlIHJlc3VsdHMgYW5kIGFkanVzdCBmb3IgdGhlIG5leHQgU3ByaW50Lg0KNC4gUmVwZWF0DQpTY3J1bSBpcyBzaW1wbGUuIFRyeSBpdCBhcyBpcyBhbmQgZGV0ZXJtaW5lIGlmIGl0cyBwaGlsb3NvcGh5LCB0aGVvcnksIGFuZCBzdHJ1Y3R1cmUgaGVscCB0byBhY2hpZXZlIGdvYWxzIA0KYW5kIGNyZWF0ZSB2YWx1ZS4gVGhlIFNjcnVtIGZyYW1ld29yayBpcyBwdXJwb3NlZnVsbHkgaW5jb21wbGV0ZSwgb25seSBkZWZpbmluZyB0aGUgcGFydHMgcmVxdWlyZWQgdG8gDQppbXBsZW1lbnQgU2NydW0gdGhlb3J5LiBTY3J1bSBpcyBidWlsdCB1cG9uIGJ5IHRoZSBjb2xsZWN0aXZlIGludGVsbGlnZW5jZSBvZiB0aGUgcGVvcGxlIHVzaW5nIGl0LiBSYXRoZXIgDQp0aGFuIHByb3ZpZGUgcGVvcGxlIHdpdGggZGV0YWlsZWQgaW5zdHJ1Y3Rpb25zLCB0aGUgcnVsZXMgb2YgU2NydW0gZ3VpZGUgdGhlaXIgcmVsYXRpb25zaGlwcyBhbmQgDQppbnRlcmFjdGlvbnMuDQpWYXJpb3VzIHByb2Nlc3NlcywgdGVjaG5pcXVlcyBhbmQgbWV0aG9kcyBjYW4gYmUgZW1wbG95ZWQgd2l0aGluIHRoZSBmcmFtZXdvcmsuIFNjcnVtIHdyYXBzIA0KYXJvdW5kIGV4aXN0aW5nIHByYWN0aWNlcyBvciByZW5kZXJzIHRoZW0gdW5uZWNlc3NhcnkuIFNjcnVtIG1ha2VzIHZpc2libGUgdGhlIHJlbGF0aXZlIGVmZmljYWN5IG9mIA0KY3VycmVudCBtYW5hZ2VtZW50LCBlbnZpcm9ubWVudCwgYW5kIHdvcmsgdGVjaG5pcXVlcywgc28gdGhhdCBpbXByb3ZlbWVudHMgY2FuIGJlIG1hZGUuDQpTY3J1bSBUaGVvcnkNClNjcnVtIGlzIGZvdW5kZWQgb24gZW1waXJpY2lzbSBhbmQgbGVhbiB0aGlua2luZy4gRW1waXJpY2lzbSBhc3NlcnRzIHRoYXQga25vd2xlZGdlIGNvbWVzIGZyb20gDQpleHBlcmllbmNlIGFuZCBtYWtpbmcgZGVjaXNpb25zIGJhc2VkIG9uIHdoYXQgaXMgb2JzZXJ2ZWQuIExlYW4gdGhpbmtpbmcgcmVkdWNlcyB3YXN0ZSBhbmQgZm9jdXNlcyANCm9uIHRoZSBlc3NlbnRpYWxzLg0KU2NydW0gZW1wbG95cyBhbiBpdGVyYXRpdmUsIGluY3JlbWVudGFsIGFwcHJvYWNoIHRvIG9wdGltaXplIHByZWRpY3RhYmlsaXR5IGFuZCB0byBjb250cm9sIHJpc2suIFNjcnVtIA0KZW5nYWdlcyBncm91cHMgb2YgcGVvcGxlIHdobyBjb2xsZWN0aXZlbHkgaGF2ZSBhbGwgdGhlIHNraWxscyBhbmQgZXhwZXJ0aXNlIHRvIGRvIHRoZSB3b3JrIGFuZCBzaGFyZSBvciANCmFjcXVpcmUgc3VjaCBza2lsbHMgYXMgbmVlZGVkLg0KU2NydW0gY29tYmluZXMgZm91ciBmb3JtYWwgZXZlbnRzIGZvciBpbnNwZWN0aW9uIGFuZCBhZGFwdGF0aW9uIHdpdGhpbiBhIGNvbnRhaW5pbmcgZXZlbnQsIHRoZSBTcHJpbnQuIA0KVGhlc2UgZXZlbnRzIHdvcmsgYmVjYXVzZSB0aGV5IGltcGxlbWVudCB0aGUgZW1waXJpY2FsIFNjcnVtIHBpbGxhcnMgb2YgdHJhbnNwYXJlbmN5LCBpbnNwZWN0aW9uLCBhbmQgDQphZGFwdGF0aW9uLg0KVHJhbnNwYXJlbmN5DQpUaGUgZW1lcmdlbnQgcHJvY2VzcyBhbmQgd29yayBtdXN0IGJlIHZpc2libGUgdG8gdGhvc2UgcGVyZm9ybWluZyB0aGUgd29yayBhcyB3ZWxsIGFzIHRob3NlIHJlY2VpdmluZyANCnRoZSB3b3JrLiBXaXRoIFNjcnVtLCBpbXBvcnRhbnQgZGVjaXNpb25zIGFyZSBiYXNlZCBvbiB0aGUgcGVyY2VpdmVkIHN0YXRlIG9mIGl0cyB0aHJlZSBmb3JtYWwgYXJ0aWZhY3RzLiANCkFydGlmYWN0cyB0aGF0IGhhdmUgbG93IHRyYW5zcGFyZW5jeSBjYW4gbGVhZCB0byBkZWNpc2lvbnMgdGhhdCBkaW1pbmlzaCB2YWx1ZSBhbmQgaW5jcmVhc2Ugcmlzay4NCjQNClRyYW5zcGFyZW5jeSBlbmFibGVzIGluc3BlY3Rpb24uIEluc3BlY3Rpb24gd2l0aG91dCB0cmFuc3BhcmVuY3kgaXMgbWlzbGVhZGluZyBhbmQgd2FzdGVmdWwuDQpJbnNwZWN0aW9uDQpUaGUgU2NydW0gYXJ0aWZhY3RzIGFuZCB0aGUgcHJvZ3Jlc3MgdG93YXJkIGFncmVlZCBnb2FscyBtdXN0IGJlIGluc3BlY3RlZCBmcmVxdWVudGx5IGFuZCBkaWxpZ2VudGx5IHRvIA0KZGV0ZWN0IHBvdGVudGlhbGx5IHVuZGVzaXJhYmxlIHZhcmlhbmNlcyBvciBwcm9ibGVtcy4gVG8gaGVscCB3aXRoIGluc3BlY3Rpb24sIFNjcnVtIHByb3ZpZGVzIGNhZGVuY2UgDQppbiB0aGUgZm9ybSBvZiBpdHMgZml2ZSBldmVudHMuDQpJbnNwZWN0aW9uIGVuYWJsZXMgYWRhcHRhdGlvbi4gSW5zcGVjdGlvbiB3aXRob3V0IGFkYXB0YXRpb24gaXMgY29uc2lkZXJlZCBwb2ludGxlc3MuIFNjcnVtIGV2ZW50cyBhcmUgDQpkZXNpZ25lZCB0byBwcm92b2tlIGNoYW5nZS4NCkFkYXB0YXRpb24NCklmIGFueSBhc3BlY3RzIG9mIGEgcHJvY2VzcyBkZXZpYXRlIG91dHNpZGUgYWNjZXB0YWJsZSBsaW1pdHMgb3IgaWYgdGhlIHJlc3VsdGluZyBwcm9kdWN0IGlzIHVuYWNjZXB0YWJsZSwgDQp0aGUgcHJvY2VzcyBiZWluZyBhcHBsaWVkIG9yIHRoZSBtYXRlcmlhbHMgYmVpbmcgcHJvZHVjZWQgbXVzdCBiZSBhZGp1c3RlZC4gVGhlIGFkanVzdG1lbnQgbXVzdCBiZSANCm1hZGUgYXMgc29vbiBhcyBwb3NzaWJsZSB0byBtaW5pbWl6ZSBmdXJ0aGVyIGRldmlhdGlvbi4NCkFkYXB0YXRpb24gYmVjb21lcyBtb3JlIGRpZmZpY3VsdCB3aGVuIHRoZSBwZW9wbGUgaW52b2x2ZWQgYXJlIG5vdCBlbXBvd2VyZWQgb3Igc2VsZi1tYW5hZ2luZy4gQSANClNjcnVtIFRlYW0gaXMgZXhwZWN0ZWQgdG8gYWRhcHQgdGhlIG1vbWVudCBpdCBsZWFybnMgYW55dGhpbmcgbmV3IHRocm91Z2ggaW5zcGVjdGlvbi4NClNjcnVtIFZhbHVlcw0KU3VjY2Vzc2Z1bCB1c2Ugb2YgU2NydW0gZGVwZW5kcyBvbiBwZW9wbGUgYmVjb21pbmcgbW9yZSBwcm9maWNpZW50IGluIGxpdmluZyBmaXZlIHZhbHVlczoNCkNvbW1pdG1lbnQsIEZvY3VzLCBPcGVubmVzcywgUmVzcGVjdCwgYW5kIENvdXJhZ2UNClRoZSBTY3J1bSBUZWFtIGNvbW1pdHMgdG8gYWNoaWV2aW5nIGl0cyBnb2FscyBhbmQgdG8gc3VwcG9ydGluZyBlYWNoIG90aGVyLiBUaGVpciBwcmltYXJ5IGZvY3VzIGlzIG9uIA0KdGhlIHdvcmsgb2YgdGhlIFNwcmludCB0byBtYWtlIHRoZSBiZXN0IHBvc3NpYmxlIHByb2dyZXNzIHRvd2FyZCB0aGVzZSBnb2Fscy4gVGhlIFNjcnVtIFRlYW0gYW5kIGl0cyANCnN0YWtlaG9sZGVycyBhcmUgb3BlbiBhYm91dCB0aGUgd29yayBhbmQgdGhlIGNoYWxsZW5nZXMuIFNjcnVtIFRlYW0gbWVtYmVycyByZXNwZWN0IGVhY2ggb3RoZXIgdG8gDQpiZSBjYXBhYmxlLCBpbmRlcGVuZGVudCBwZW9wbGUsIGFuZCBhcmUgcmVzcGVjdGVkIGFzIHN1Y2ggYnkgdGhlIHBlb3BsZSB3aXRoIHdob20gdGhleSB3b3JrLiBUaGUgDQpTY3J1bSBUZWFtIG1lbWJlcnMgaGF2ZSB0aGUgY291cmFnZSB0byBkbyB0aGUgcmlnaHQgdGhpbmcsIHRvIHdvcmsgb24gdG91Z2ggcHJvYmxlbXMuDQpUaGVzZSB2YWx1ZXMgZ2l2ZSBkaXJlY3Rpb24gdG8gdGhlIFNjcnVtIFRlYW0gd2l0aCByZWdhcmQgdG8gdGhlaXIgd29yaywgYWN0aW9ucywgYW5kIGJlaGF2aW9yLiBUaGUgDQpkZWNpc2lvbnMgdGhhdCBhcmUgbWFkZSwgdGhlIHN0ZXBzIHRha2VuLCBhbmQgdGhlIHdheSBTY3J1bSBpcyB1c2VkIHNob3VsZCByZWluZm9yY2UgdGhlc2UgdmFsdWVzLCBub3QgDQpkaW1pbmlzaCBvciB1bmRlcm1pbmUgdGhlbS4gVGhlIFNjcnVtIFRlYW0gbWVtYmVycyBsZWFybiBhbmQgZXhwbG9yZSB0aGUgdmFsdWVzIGFzIHRoZXkgd29yayB3aXRoIA0KdGhlIFNjcnVtIGV2ZW50cyBhbmQgYXJ0aWZhY3RzLiBXaGVuIHRoZXNlIHZhbHVlcyBhcmUgZW1ib2RpZWQgYnkgdGhlIFNjcnVtIFRlYW0gYW5kIHRoZSBwZW9wbGUgDQp0aGV5IHdvcmsgd2l0aCwgdGhlIGVtcGlyaWNhbCBTY3J1bSBwaWxsYXJzIG9mIHRyYW5zcGFyZW5jeSwgaW5zcGVjdGlvbiwgYW5kIGFkYXB0YXRpb24gY29tZSB0byBsaWZlIA0KYnVpbGRpbmcgdHJ1c3QuDQo1DQpTY3J1bSBUZWFtDQpUaGUgZnVuZGFtZW50YWwgdW5pdCBvZiBTY3J1bSBpcyBhIHNtYWxsIHRlYW0gb2YgcGVvcGxlLCBhIFNjcnVtIFRlYW0uIFRoZSBTY3J1bSBUZWFtIGNvbnNpc3RzIG9mIA0Kb25lIFNjcnVtIE1hc3Rlciwgb25lIFByb2R1Y3QgT3duZXIsIGFuZCBEZXZlbG9wZXJzLiBXaXRoaW4gYSBTY3J1bSBUZWFtLCB0aGVyZSBhcmUgbm8gc3ViLXRlYW1zIA0Kb3IgaGllcmFyY2hpZXMuIEl0IGlzIGEgY29oZXNpdmUgdW5pdCBvZiBwcm9mZXNzaW9uYWxzIGZvY3VzZWQgb24gb25lIG9iamVjdGl2ZSBhdCBhIHRpbWUsIHRoZSBQcm9kdWN0IEdvYWwuDQpTY3J1bSBUZWFtcyBhcmUgY3Jvc3MtZnVuY3Rpb25hbCwgbWVhbmluZyB0aGUgbWVtYmVycyBoYXZlIGFsbCB0aGUgc2tpbGxzIG5lY2Vzc2FyeSB0byBjcmVhdGUgdmFsdWUgDQplYWNoIFNwcmludC4gVGhleSBhcmUgYWxzbyBzZWxmLW1hbmFnaW5nLCBtZWFuaW5nIHRoZXkgaW50ZXJuYWxseSBkZWNpZGUgd2hvIGRvZXMgd2hhdCwgd2hlbiwgYW5kIA0KaG93Lg0KVGhlIFNjcnVtIFRlYW0gaXMgc21hbGwgZW5vdWdoIHRvIHJlbWFpbiBuaW1ibGUgYW5kIGxhcmdlIGVub3VnaCB0byBjb21wbGV0ZSBzaWduaWZpY2FudCB3b3JrIHdpdGhpbiANCmEgU3ByaW50LCB0eXBpY2FsbHkgMTAgb3IgZmV3ZXIgcGVvcGxlLiBJbiBnZW5lcmFsLCB3ZSBoYXZlIGZvdW5kIHRoYXQgc21hbGxlciB0ZWFtcyBjb21tdW5pY2F0ZSBiZXR0ZXIgDQphbmQgYXJlIG1vcmUgcHJvZHVjdGl2ZS4gSWYgU2NydW0gVGVhbXMgYmVjb21lIHRvbyBsYXJnZSwgdGhleSBzaG91bGQgY29uc2lkZXIgcmVvcmdhbml6aW5nIGludG8gDQptdWx0aXBsZSBjb2hlc2l2ZSBTY3J1bSBUZWFtcywgZWFjaCBmb2N1c2VkIG9uIHRoZSBzYW1lIHByb2R1Y3QuIFRoZXJlZm9yZSwgdGhleSBzaG91bGQgc2hhcmUgdGhlIA0Kc2FtZSBQcm9kdWN0IEdvYWwsIFByb2R1Y3QgQmFja2xvZywgYW5kIFByb2R1Y3QgT3duZXIuDQpUaGUgU2NydW0gVGVhbSBpcyByZXNwb25zaWJsZSBmb3IgYWxsIHByb2R1Y3QtcmVsYXRlZCBhY3Rpdml0aWVzIGZyb20gc3Rha2Vob2xkZXIgY29sbGFib3JhdGlvbiwgDQp2ZXJpZmljYXRpb24sIG1haW50ZW5hbmNlLCBvcGVyYXRpb24sIGV4cGVyaW1lbnRhdGlvbiwgcmVzZWFyY2ggYW5kIGRldmVsb3BtZW50LCBhbmQgYW55dGhpbmcgZWxzZSANCnRoYXQgbWlnaHQgYmUgcmVxdWlyZWQuIFRoZXkgYXJlIHN0cnVjdHVyZWQgYW5kIGVtcG93ZXJlZCBieSB0aGUgb3JnYW5pemF0aW9uIHRvIG1hbmFnZSB0aGVpciBvd24gDQp3b3JrLiBXb3JraW5nIGluIFNwcmludHMgYXQgYSBzdXN0YWluYWJsZSBwYWNlIGltcHJvdmVzIHRoZSBTY3J1bSBUZWFt4oCZcyBmb2N1cyBhbmQgY29uc2lzdGVuY3kuDQpUaGUgZW50aXJlIFNjcnVtIFRlYW0gaXMgYWNjb3VudGFibGUgZm9yIGNyZWF0aW5nIGEgdmFsdWFibGUsIHVzZWZ1bCBJbmNyZW1lbnQgZXZlcnkgU3ByaW50LiBTY3J1bSANCmRlZmluZXMgdGhyZWUgc3BlY2lmaWMgYWNjb3VudGFiaWxpdGllcyB3aXRoaW4gdGhlIFNjcnVtIFRlYW06IHRoZSBEZXZlbG9wZXJzLCB0aGUgUHJvZHVjdCBPd25lciwgYW5kIA0KdGhlIFNjcnVtIE1hc3Rlci4NCkRldmVsb3BlcnMNCkRldmVsb3BlcnMgYXJlIHRoZSBwZW9wbGUgaW4gdGhlIFNjcnVtIFRlYW0gdGhhdCBhcmUgY29tbWl0dGVkIHRvIGNyZWF0aW5nIGFueSBhc3BlY3Qgb2YgYSB1c2FibGUgDQpJbmNyZW1lbnQgZWFjaCBTcHJpbnQuIA0KVGhlIHNwZWNpZmljIHNraWxscyBuZWVkZWQgYnkgdGhlIERldmVsb3BlcnMgYXJlIG9mdGVuIGJyb2FkIGFuZCB3aWxsIHZhcnkgd2l0aCB0aGUgZG9tYWluIG9mIHdvcmsuIA0KSG93ZXZlciwgdGhlIERldmVsb3BlcnMgYXJlIGFsd2F5cyBhY2NvdW50YWJsZSBmb3I6DQril48gQ3JlYXRpbmcgYSBwbGFuIGZvciB0aGUgU3ByaW50LCB0aGUgU3ByaW50IEJhY2tsb2c7DQril48gSW5zdGlsbGluZyBxdWFsaXR5IGJ5IGFkaGVyaW5nIHRvIGEgRGVmaW5pdGlvbiBvZiBEb25lOw0K4pePIEFkYXB0aW5nIHRoZWlyIHBsYW4gZWFjaCBkYXkgdG93YXJkIHRoZSBTcHJpbnQgR29hbDsgYW5kLA0K4pePIEhvbGRpbmcgZWFjaCBvdGhlciBhY2NvdW50YWJsZSBhcyBwcm9mZXNzaW9uYWxzLg0KUHJvZHVjdCBPd25lcg0KVGhlIFByb2R1Y3QgT3duZXIgaXMgYWNjb3VudGFibGUgZm9yIG1heGltaXppbmcgdGhlIHZhbHVlIG9mIHRoZSBwcm9kdWN0IHJlc3VsdGluZyBmcm9tIHRoZSB3b3JrIG9mIA0KdGhlIFNjcnVtIFRlYW0uIEhvdyB0aGlzIGlzIGRvbmUgbWF5IHZhcnkgd2lkZWx5IGFjcm9zcyBvcmdhbml6YXRpb25zLCBTY3J1bSBUZWFtcywgYW5kIGluZGl2aWR1YWxzLg0KNg0KVGhlIFByb2R1Y3QgT3duZXIgaXMgYWxzbyBhY2NvdW50YWJsZSBmb3IgZWZmZWN0aXZlIFByb2R1Y3QgQmFja2xvZyBtYW5hZ2VtZW50LCB3aGljaCBpbmNsdWRlczoNCuKXjyBEZXZlbG9waW5nIGFuZCBleHBsaWNpdGx5IGNvbW11bmljYXRpbmcgdGhlIFByb2R1Y3QgR29hbDsNCuKXjyBDcmVhdGluZyBhbmQgY2xlYXJseSBjb21tdW5pY2F0aW5nIFByb2R1Y3QgQmFja2xvZyBpdGVtczsNCuKXjyBPcmRlcmluZyBQcm9kdWN0IEJhY2tsb2cgaXRlbXM7IGFuZCwNCuKXjyBFbnN1cmluZyB0aGF0IHRoZSBQcm9kdWN0IEJhY2tsb2cgaXMgdHJhbnNwYXJlbnQsIHZpc2libGUgYW5kIHVuZGVyc3Rvb2QuDQpUaGUgUHJvZHVjdCBPd25lciBtYXkgZG8gdGhlIGFib3ZlIHdvcmsgb3IgbWF5IGRlbGVnYXRlIHRoZSByZXNwb25zaWJpbGl0eSB0byBvdGhlcnMuIFJlZ2FyZGxlc3MsIHRoZSANClByb2R1Y3QgT3duZXIgcmVtYWlucyBhY2NvdW50YWJsZS4NCkZvciBQcm9kdWN0IE93bmVycyB0byBzdWNjZWVkLCB0aGUgZW50aXJlIG9yZ2FuaXphdGlvbiBtdXN0IHJlc3BlY3QgdGhlaXIgZGVjaXNpb25zLiBUaGVzZSBkZWNpc2lvbnMgDQphcmUgdmlzaWJsZSBpbiB0aGUgY29udGVudCBhbmQgb3JkZXJpbmcgb2YgdGhlIFByb2R1Y3QgQmFja2xvZywgYW5kIHRocm91Z2ggdGhlIGluc3BlY3RhYmxlIEluY3JlbWVudCBhdCANCnRoZSBTcHJpbnQgUmV2aWV3LiANClRoZSBQcm9kdWN0IE93bmVyIGlzIG9uZSBwZXJzb24sIG5vdCBhIGNvbW1pdHRlZS4gVGhlIFByb2R1Y3QgT3duZXIgbWF5IHJlcHJlc2VudCB0aGUgbmVlZHMgb2YgDQptYW55IHN0YWtlaG9sZGVycyBpbiB0aGUgUHJvZHVjdCBCYWNrbG9nLiBUaG9zZSB3YW50aW5nIHRvIGNoYW5nZSB0aGUgUHJvZHVjdCBCYWNrbG9nIGNhbiBkbyBzbyBieSANCnRyeWluZyB0byBjb252aW5jZSB0aGUgUHJvZHVjdCBPd25lci4NClNjcnVtIE1hc3Rlcg0KVGhlIFNjcnVtIE1hc3RlciBpcyBhY2NvdW50YWJsZSBmb3IgZXN0YWJsaXNoaW5nIFNjcnVtIGFzIGRlZmluZWQgaW4gdGhlIFNjcnVtIEd1aWRlLiBUaGV5IGRvIHRoaXMgYnkgDQpoZWxwaW5nIGV2ZXJ5b25lIHVuZGVyc3RhbmQgU2NydW0gdGhlb3J5IGFuZCBwcmFjdGljZSwgYm90aCB3aXRoaW4gdGhlIFNjcnVtIFRlYW0gYW5kIHRoZSANCm9yZ2FuaXphdGlvbi4NClRoZSBTY3J1bSBNYXN0ZXIgaXMgYWNjb3VudGFibGUgZm9yIHRoZSBTY3J1bSBUZWFt4oCZcyBlZmZlY3RpdmVuZXNzLiBUaGV5IGRvIHRoaXMgYnkgZW5hYmxpbmcgdGhlIA0KU2NydW0gVGVhbSB0byBpbXByb3ZlIGl0cyBwcmFjdGljZXMsIHdpdGhpbiB0aGUgU2NydW0gZnJhbWV3b3JrLg0KU2NydW0gTWFzdGVycyBhcmUgdHJ1ZSBsZWFkZXJzIHdobyBzZXJ2ZSB0aGUgU2NydW0gVGVhbSBhbmQgdGhlIGxhcmdlciBvcmdhbml6YXRpb24uDQpUaGUgU2NydW0gTWFzdGVyIHNlcnZlcyB0aGUgU2NydW0gVGVhbSBpbiBzZXZlcmFsIHdheXMsIGluY2x1ZGluZzoNCuKXjyBDb2FjaGluZyB0aGUgdGVhbSBtZW1iZXJzIGluIHNlbGYtbWFuYWdlbWVudCBhbmQgY3Jvc3MtZnVuY3Rpb25hbGl0eTsNCuKXjyBIZWxwaW5nIHRoZSBTY3J1bSBUZWFtIGZvY3VzIG9uIGNyZWF0aW5nIGhpZ2gtdmFsdWUgSW5jcmVtZW50cyB0aGF0IG1lZXQgdGhlIERlZmluaXRpb24gb2YgDQpEb25lOw0K4pePIENhdXNpbmcgdGhlIHJlbW92YWwgb2YgaW1wZWRpbWVudHMgdG8gdGhlIFNjcnVtIFRlYW3igJlzIHByb2dyZXNzOyBhbmQsDQril48gRW5zdXJpbmcgdGhhdCBhbGwgU2NydW0gZXZlbnRzIHRha2UgcGxhY2UgYW5kIGFyZSBwb3NpdGl2ZSwgcHJvZHVjdGl2ZSwgYW5kIGtlcHQgd2l0aGluIHRoZSANCnRpbWVib3guDQpUaGUgU2NydW0gTWFzdGVyIHNlcnZlcyB0aGUgUHJvZHVjdCBPd25lciBpbiBzZXZlcmFsIHdheXMsIGluY2x1ZGluZzoNCjcNCuKXjyBIZWxwaW5nIGZpbmQgdGVjaG5pcXVlcyBmb3IgZWZmZWN0aXZlIFByb2R1Y3QgR29hbCBkZWZpbml0aW9uIGFuZCBQcm9kdWN0IEJhY2tsb2cgbWFuYWdlbWVudDsNCuKXjyBIZWxwaW5nIHRoZSBTY3J1bSBUZWFtIHVuZGVyc3RhbmQgdGhlIG5lZWQgZm9yIGNsZWFyIGFuZCBjb25jaXNlIFByb2R1Y3QgQmFja2xvZyBpdGVtczsNCuKXjyBIZWxwaW5nIGVzdGFibGlzaCBlbXBpcmljYWwgcHJvZHVjdCBwbGFubmluZyBmb3IgYSBjb21wbGV4IGVudmlyb25tZW50OyBhbmQsDQril48gRmFjaWxpdGF0aW5nIHN0YWtlaG9sZGVyIGNvbGxhYm9yYXRpb24gYXMgcmVxdWVzdGVkIG9yIG5lZWRlZC4NClRoZSBTY3J1bSBNYXN0ZXIgc2VydmVzIHRoZSBvcmdhbml6YXRpb24gaW4gc2V2ZXJhbCB3YXlzLCBpbmNsdWRpbmc6DQril48gTGVhZGluZywgdHJhaW5pbmcsIGFuZCBjb2FjaGluZyB0aGUgb3JnYW5pemF0aW9uIGluIGl0cyBTY3J1bSBhZG9wdGlvbjsNCuKXjyBQbGFubmluZyBhbmQgYWR2aXNpbmcgU2NydW0gaW1wbGVtZW50YXRpb25zIHdpdGhpbiB0aGUgb3JnYW5pemF0aW9uOyANCuKXjyBIZWxwaW5nIGVtcGxveWVlcyBhbmQgc3Rha2Vob2xkZXJzIHVuZGVyc3RhbmQgYW5kIGVuYWN0IGFuIGVtcGlyaWNhbCBhcHByb2FjaCBmb3IgY29tcGxleCANCndvcms7IGFuZCwNCuKXjyBSZW1vdmluZyBiYXJyaWVycyBiZXR3ZWVuIHN0YWtlaG9sZGVycyBhbmQgU2NydW0gVGVhbXMuDQpTY3J1bSBFdmVudHMNClRoZSBTcHJpbnQgaXMgYSBjb250YWluZXIgZm9yIGFsbCBvdGhlciBldmVudHMuIEVhY2ggZXZlbnQgaW4gU2NydW0gaXMgYSBmb3JtYWwgb3Bwb3J0dW5pdHkgdG8gaW5zcGVjdCBhbmQgDQphZGFwdCBTY3J1bSBhcnRpZmFjdHMuIFRoZXNlIGV2ZW50cyBhcmUgc3BlY2lmaWNhbGx5IGRlc2lnbmVkIHRvIGVuYWJsZSB0aGUgdHJhbnNwYXJlbmN5IHJlcXVpcmVkLiANCkZhaWx1cmUgdG8gb3BlcmF0ZSBhbnkgZXZlbnRzIGFzIHByZXNjcmliZWQgcmVzdWx0cyBpbiBsb3N0IG9wcG9ydHVuaXRpZXMgdG8gaW5zcGVjdCBhbmQgYWRhcHQuIEV2ZW50cyBhcmUgDQp1c2VkIGluIFNjcnVtIHRvIGNyZWF0ZSByZWd1bGFyaXR5IGFuZCB0byBtaW5pbWl6ZSB0aGUgbmVlZCBmb3IgbWVldGluZ3Mgbm90IGRlZmluZWQgaW4gU2NydW0uIA0KT3B0aW1hbGx5LCBhbGwgZXZlbnRzIGFyZSBoZWxkIGF0IHRoZSBzYW1lIHRpbWUgYW5kIHBsYWNlIHRvIHJlZHVjZSBjb21wbGV4aXR5Lg0KVGhlIFNwcmludA0KU3ByaW50cyBhcmUgdGhlIGhlYXJ0YmVhdCBvZiBTY3J1bSwgd2hlcmUgaWRlYXMgYXJlIHR1cm5lZCBpbnRvIHZhbHVlLg0KVGhleSBhcmUgZml4ZWQgbGVuZ3RoIGV2ZW50cyBvZiBvbmUgbW9udGggb3IgbGVzcyB0byBjcmVhdGUgY29uc2lzdGVuY3kuIEEgbmV3IFNwcmludCBzdGFydHMgaW1tZWRpYXRlbHkgDQphZnRlciB0aGUgY29uY2x1c2lvbiBvZiB0aGUgcHJldmlvdXMgU3ByaW50Lg0KQWxsIHRoZSB3b3JrIG5lY2Vzc2FyeSB0byBhY2hpZXZlIHRoZSBQcm9kdWN0IEdvYWwsIGluY2x1ZGluZyBTcHJpbnQgUGxhbm5pbmcsIERhaWx5IFNjcnVtcywgU3ByaW50IA0KUmV2aWV3LCBhbmQgU3ByaW50IFJldHJvc3BlY3RpdmUsIGhhcHBlbiB3aXRoaW4gU3ByaW50cy4="
},
"permission": {
"allowAnonymous": true,
"allowedPermissions": [],
"deniedPermissions": []
}
},
{
"displayUrl": "https://www.perficient.com/handshake-release.html",
"id": "https://www.perficient.com/handshake-release.htmlqdfsdfsssdd",
"hash": "abcdefghighlmnopqrstuvwxyz1234567890",
"delete": false,
"lastModified": 1586120207123,
"title": "Handshake provided by Perficient @2020 IIIIII",
"data": {
"mimetype": "application/json",
"compressionType": "Uncompressed",
"binary": "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHRvcGljIGlkPSJkb2Nib29rX29yX2RpdGEiPgogIDx0aXRsZT5ESVRBIG9yIERvY0Jvb2s/PC90aXRsZT4KICA8c2hvcnRkZXNjPkJvdGggRElUQSBhbmQgRG9jQm9vayBhcmUgYm90aCBtYXR1cmUsIGZlYXR1cmUgcmljaCwgZG9jdW1lbnQgdHlwZXMsCiAgc28gd2hpY2ggb25lIHRvIGNob29zZT88L3Nob3J0ZGVzYz4KICA8Ym9keT4KICAgIDxwPkRvY0Jvb2sgNSBpcyBhIG1hdHVyZSBkb2N1bWVudCB0eXBlLiBJdCBpcyB3ZWxsLWRvY3VtZW50ZWQgKERvY0Jvb2s6CiAgICBUaGUgRGVmaW5pdGl2ZSBHdWlkZSwgRG9jQm9vayBYU0w6IFRoZSBDb21wbGV0ZSBHdWlkZSksIGZlYXR1cmluZyBkZWNlbnQKICAgIFhTTCBzdHlsZXNoZWV0cyBhbGxvd2luZyBjb252ZXJzaW9uIHRvIGEgdmFyaWV0eSBvZiBmb3JtYXRzLCBiYXNlZCBvbiB0aGUKICAgIGJlc3Qgc2NoZW1hIHRlY2hub2xvZ2llczogUkVMQVggTkcgYW5kIFNjaGVtYXRyb24uPC9wPgogICAgPHA+RElUQSBjb25jZXB0cyAodG9waWNzLCBtYXBzLCBzcGVjaWFsaXphdGlvbiwgZXRjKSBoYXZlIGFuIGltbWVkaWF0ZQogICAgYXBwZWFsIHRvIHRoZSB0ZWNobmljYWwgd3JpdGVyLCBtYWtpbmcgdGhpcyBkb2N1bWVudCB0eXBlIG1vcmUgYXR0cmFjdGl2ZQogICAgdGhhbiBEb2NCb29rLiBIb3dldmVyIHRoZSBEb2NCb29rIHZvY2FidWxhcnkgaXMgY29tcHJlaGVuc2l2ZSBhbmQgdmVyeQogICAgd2VsbCB0aG91Z2h0IG91dC4gU28gY2hvb3NlIERJVEEgaWYgaXRzIHRlY2huaWNhbCB2b2NhYnVsYXJ5IGlzCiAgICBzdWZmaWNpZW50bHkgZXhwcmVzc2l2ZSBmb3IgeW91ciBuZWVkcyBvciBpZiwgYW55d2F5LCB5b3UgaW50ZW5kIHRvCiAgICBzcGVjaWFsaXplIERJVEEuPC9wPgogIDwvYm9keT4KICA8cmVsYXRlZC1saW5rcz4KICAgIDxsaW5rIGZvcm1hdD0iaHRtbCIgaHJlZj0iaHR0cDovL3d3dy5kb2Nib29rLm9yZy8iIHNjb3BlPSJleHRlcm5hbCI+CiAgICAgIDxsaW5rdGV4dD5Eb2NCb29rIDU8L2xpbmt0ZXh0PgogICAgPC9saW5rPgogICAgPGxpbmsgZm9ybWF0PSJodG1sIgogICAgICAgICAgaHJlZj0iaHR0cDovL3d3dy5vYXNpcy1vcGVuLm9yZy9jb21taXR0ZWVzL3RjX2hvbWUucGhwP3dnX2FiYnJldj1kaXRhIgogICAgICAgICAgc2NvcGU9ImV4dGVybmFsIj4KICAgICAgPGxpbmt0ZXh0PkRJVEE8L2xpbmt0ZXh0PgogICAgPC9saW5rPgogIDwvcmVsYXRlZC1saW5rcz4KPHhyZWYgaHJlZj0idG9waWNfc3RydWN0dXJlLmRpdGEiLz4KPHhyZWYgaHJlZj0iaHR0cDovL3d3dy54bWxtaW5kLmNvbS94bWxlZGl0b3IvIgogICAgICBmb3JtYXQ9Imh0bWwiCiAgICAgIHNjb3BlPSJleHRlcm5hbCI+WE1MbWluZCBYTUwgRWRpdG9yPC94cmVmPgo8bGluayBocmVmPSJzYW1wbGVzL3NhbXBsZV90b3BpYy5kaXRhI2RvY2Jvb2tfb3JfZGl0YSIvPgo8bGluayBocmVmPSJodHRwOi8vd3d3LnhtbG1pbmQuY29tL2RpdGFjLyIKICAgICAgZm9ybWF0PSJodG1sIgogICAgICBzY29wZT0iZXh0ZXJuYWwiPgogIDxsaW5rdGV4dD5YTUxtaW5kIERJVEEgQ29udmVydGVyPC9saW5rdGV4dD4KPC9saW5rPgo8ZXhhbXBsZT4KICA8dGl0bGU+Q29udmVydGluZyBhIGNvbG9yIGltYWdlIHRvIGJsYWNrIGFuZCB3aGl0ZTwvdGl0bGU+CiAgPHByZT4kIGNvbnZlcnQgLWRpdGhlciBGbG95ZC1TdGVpbmJlcmcgLW1vbm9jaHJvbWUgcGhvdG8ucG5nIGJ3cGhvdG8uZ2lmPC9wcmU+CiAgPGZpZz4KICAgIDx0aXRsZT5UaGUgcGhvdG8gY29udmVydGVkIHRvIGJsYWNrIGFuZCB3aGl0ZTwvdGl0bGU+CiAgICA8aW1hZ2UgaHJlZj0iYndwaG90by5naWYiIGFsaWduPSJjZW50ZXIiLz4KICA8L2ZpZz4KPC9leGFtcGxlPgo8L3RvcGljPg=="
},
